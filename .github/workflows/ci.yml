name: CI

on:
  push:
    branches: [develop]
  repository_dispatch:
    types: [trigger-ci-workflow]
    branches: [develop]

env:
  FORCE_COLOR: true
  NODE_VERSION: 18 # Used by semantic-release

jobs:
  build:
    name: Build Bot
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        if: ${{ github.event.action != 'repository_dispatch' }}

      - uses: actions/checkout@v3
        if: ${{ github.event.action == 'repository_dispatch' }}
        with:
          ref: ${{ github.event.client_payload.sha }}

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build Bot
        run: yarn build

      - name: Run Tests
        run: yarn test

      - name: Run Linter
        run: yarn lint

      - name: Create Release
        if: success() && github.ref == 'refs/heads/develop'
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy Files
        if: success() && github.ref == 'refs/heads/develop'
        run: |
          cp package.json dist/package.json
          cp yarn.lock dist/yarn.lock
          cp .yarnrc.yml dist/.yarnrc.yml
          mkdir -p dist/.yarn/releases
          cp -r .yarn/releases/ dist/.yarn/
          mkdir -p dist/.yarn/plugins
          cp -r .yarn/plugins/ dist/.yarn/

      - name: Deploy Changes
        if: success() && github.ref == 'refs/heads/develop'
        uses: wopian/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: production
          FOLDER: dist
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Announce Deployment
        if: success() && github.ref == 'refs/heads/develop'
        run: |
          curl "https://control.sparkedhost.us/api/client/servers/${{ vars.SPARKEDHOST_SERVER }}/power" \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'Authorization: Bearer ${{ secrets.SPARKEDHOST_TOKEN }}' \
          -X POST \
          -d '{
          "signal": "restart"
          }'
